name: Deploy to ECS

on:
  workflow_dispatch
#    push:
#      branches:
#         - main 
  

# env:
#   AWS_REGION: us-west-1
#   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#   DOCKER_HUB_USERNAME: ${{ secrets.USERNAME }} 
#   DOCKER_HUB_PASSWORD: ${{ secrets.PASSWD }}

jobs:
 deploy:
  runs-on: ubuntu-latest
  steps:
  - name: Checkout code
    uses: actions/checkout@v2
     echo "Hi"

#   - name: Login to Docker Hub
#     uses: docker/login-action@v2
#     with:
#       username: ${{ env.DOCKER_HUB_USERNAME }}
#       password: ${{ env.DOCKER_HUB_PASSWORD }}
#         echo "HI"

#   - name: Build and push Docker image
#     id: build-image
#     run: |
#       docker build -t mohanaprasath/frontend:latest .
#       docker push mohanaprasath/frontend:latest
#       echo "image=mohanaprasath/frontend:latest" >> $GITHUB_OUTPUT
      
#   - name: Configure AWS credentials
#     uses: aws-actions/configure-aws-credentials@v1
#     with:
#       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#       aws-region: us-west-1
      
#   - name: Fill in the new image ID in the Amazon ECS task definition
#     id: task-def
#     uses: aws-actions/amazon-ecs-render-task-definition@v1
#     with:
#       task-definition: task-definition.json
#       container-name: Frontend
#       image: ${{ steps.build-image.outputs.image }}

#   - name: Deploy Amazon ECS task definition
#     uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#     with:
#       task-definition: ${{ steps.task-def.outputs.task-definition }}
#       service: lin-NP-USW1-SN
#       cluster: lin-NP-USW1-ECS
#       wait-for-service-stability: true 
