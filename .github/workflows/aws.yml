name: Deploy to ECS

on:
  push:
    branches:
      - main

env:
 AWS_REGION: us-west-1
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 DOCKER_HUB_USERNAME: ${{ secrets.USERNAME }} 
 DOCKER_HUB_PASSWORD: ${{ secrets.PASSWD }}
 ECS_SERVICE: lin-NP-USW1-SN
 ECS_CLUSTER: lin-NP-USW1-ECS
 ECS_TASK_DEFINITION: frontend/Taskdef.json .
 CONTAINER_NAME: lin-frontend

jobs:
 deploy:
  runs-on: ubuntu-latest
  steps:
  - name: Checkout code
    uses: actions/checkout@v1

  - name: Login to Docker Hub
    uses: docker/login-action@v2
    with:
      username: ${{ env.DOCKER_HUB_USERNAME }}
      password: ${{ env.DOCKER_HUB_PASSWORD }}

  - name: Build and push Docker image
    run: |
      docker build -t mohanaprasath/frontend:latest .
      docker push mohanaprasath/frontend:latest
      
  - name: Configure AWS credentials
    uses: aws-actions/configure-aws-credentials@v2
    with:
      aws-region: ${{ env.AWS_REGION }}
      aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

  - name: Fill in the new image ID in the Amazon ECS task definition
    id: task-def
    uses: aws-actions/amazon-ecs-render-task-definition@v1
    with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

  - name: Deploy Amazon ECS task definition
    uses: aws-actions/amazon-ecs-deploy-task-definition@v1
    with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
